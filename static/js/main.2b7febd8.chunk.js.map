{"version":3,"sources":["context/TodoContext.js","component/TodoAdd.js","component/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","todos","add","delete","TodoAdd","useState","text","setText","tContext","useContext","action","onSubmit","e","preventDefault","submitHandler","type","placeholder","onChange","target","value","inputHandler","TodoList","tContect","todo","map","item","onClick","key","icon","faTimes","style","color","App","getState","JSON","parse","localStorage","getItem","setTodo","useEffect","setItem","stringify","Provider","Date","now","bind","this","selectItem","filter","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAQeA,EANKC,IAAMC,cAAc,CACpCC,MAAO,GACPC,IAAK,aACLC,OAAQ,e,eCCG,SAASC,IACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAWC,qBAAWX,GAY5B,OACI,uBAAMY,OAAO,GAAGC,SAAU,SAACC,GAAD,OAXV,SAACA,GACjBA,EAAEC,iBACFL,EAASN,IAAKI,GACdC,EAAQ,IAQyBO,CAAcF,IAA/C,UACI,uBAAOG,KAAK,OAAOC,YAAY,kBAAkBC,SAAU,SAACL,GAAD,OANhD,SAACA,GAChBL,EAASK,EAAEM,OAAOC,OAKoDC,CAAaR,IAAIO,MAAOb,IAC1F,wBAAQS,KAAK,SAAb,oB,0BCfG,SAASM,IAEpB,IAAMC,EAAWb,qBAAWX,GAM5B,OACI,6BAEQwB,EAASC,KAAKC,KAAI,SAAAC,GAAI,OAAK,+BAAmB,4BAAIA,EAAKnB,OAAS,sBAAMoB,QAAS,kBAPtEC,EAO0FF,EAAKE,SANhHL,EAASnB,OAAOwB,GADA,IAACA,GAOuD,SAA8C,cAAC,IAAD,CAAiBC,KAAMC,IAASC,MAAO,CAACC,MAAO,iBAAzHN,EAAKE,U,MCT1C,SAASK,IAEtB,IAAIC,EAAWC,KAAKC,MAAOC,aAAaC,QAAQ,cAAiB,GACjE,EAAwBhC,mBAAS4B,GAAjC,mBAAOV,EAAP,KAAae,EAAb,KAEAvC,IAAMwC,WAAW,WACfH,aAAaI,QAAQ,WAAYN,KAAKO,UAAUlB,MAC/C,CAACA,IAiBJ,OACE,cAAC,EAAYmB,SAAb,CAAsBvB,MAAO,CAC3BI,KAAMA,EACNrB,IAlBU,SAACI,GACbgC,EAAQ,GAAD,mBACFf,GADE,CACG,CACRjB,KAAMA,EACNqB,IAAKgB,KAAKC,UAEZR,aAAaI,QAAQ,WAAYN,KAAKO,UAAUlB,KAYjCsB,KAAKC,MAClB3C,OAVa,SAACwB,GAChB,IAAIoB,EAAaxB,EAAKyB,QAAO,SAAAvB,GAAI,OAAIA,EAAKE,MAAQA,KAClDW,EAAQ,YAAKS,IACbX,aAAaI,QAAQ,WAAYN,KAAKO,UAAUM,KAO3BF,KAAKC,OAH1B,SAKE,sBAAKG,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,qBACA,cAAC,EAAD,IACA,cAAC,EAAD,SC5CR,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2b7febd8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoContext = React.createContext({\r\n    todos: [],\r\n    add: () => {},\r\n    delete: () => {}\r\n});\r\n\r\nexport default TodoContext;","import React, { useContext, useState } from 'react';\r\n\r\nimport TodoContext from './../context/TodoContext';\r\n\r\nimport './TodoAdd.css';\r\n\r\nexport default function TodoAdd() {\r\n    const [text, setText] = useState('');\r\n\r\n    const tContext = useContext(TodoContext);\r\n\r\n    let submitHandler = (e) => {\r\n        e.preventDefault();\r\n        tContext.add( text )\r\n        setText('');\r\n    }\r\n\r\n    let inputHandler = (e) => {\r\n        setText( e.target.value );\r\n    }\r\n\r\n    return (\r\n        <form action=\"\" onSubmit={(e) => submitHandler(e)}>\r\n            <input type=\"text\" placeholder=\"I want to do...\" onChange={(e) => inputHandler(e)} value={text}/>\r\n            <button type=\"submit\">add</button>\r\n        </form>\r\n    )\r\n}","import React, { useContext } from 'react';\r\n\r\nimport './TodoList.css';\r\n\r\nimport TodoContext from './../context/TodoContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\n\r\nexport default function TodoList() {\r\n\r\n    const tContect = useContext(TodoContext);\r\n    \r\n    let deleteHandler = (key) => {\r\n        tContect.delete(key);\r\n    }\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                tContect.todo.map(item => (<li key={item.key}><p>{item.text}</p><span onClick={() => deleteHandler(item.key)}><FontAwesomeIcon icon={faTimes} style={{color: '#707070'}}/></span></li>))\r\n            }\r\n        </ul>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport TodoAdd from './component/TodoAdd';\r\nimport TodoList from './component/TodoList';\r\n\r\nimport TodoContext from './context/TodoContext';\r\n\r\nimport './App.css';\r\n\r\n// ===============================================\r\n\r\nexport default function App() {\r\n\r\n  let getState = JSON.parse( localStorage.getItem('todoList') ) || [];\r\n  const [todo, setTodo] = useState(getState);\r\n\r\n  React.useEffect( () => {\r\n    localStorage.setItem('todoList', JSON.stringify(todo));\r\n  }, [todo]);\r\n\r\n  let addTodo = (text) => {\r\n    setTodo([\r\n      ...todo,{\r\n      text: text,\r\n      key: Date.now()\r\n    }]);\r\n    localStorage.setItem('todoList', JSON.stringify(todo));\r\n  }\r\n\r\n  let deleteTodo = (key) => {\r\n    let selectItem = todo.filter(item => item.key !== key);\r\n    setTodo([ ...selectItem ]);\r\n    localStorage.setItem('todoList', JSON.stringify(selectItem));\r\n  }\r\n\r\n  return (\r\n    <TodoContext.Provider value={{\r\n      todo: todo,\r\n      add: addTodo.bind(this),\r\n      delete: deleteTodo.bind(this)\r\n    }}>\r\n      <div className=\"container\">\r\n        <h2 className=\"text-head\">TodoApp</h2>\r\n        <TodoAdd />\r\n        <TodoList />\r\n      </div>\r\n    </TodoContext.Provider>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}